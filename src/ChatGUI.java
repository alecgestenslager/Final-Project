import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PrintWriter;

public class ChatGUI extends  JFrame {

    private String message;
    private PrintWriter pw;

    /**
     * Creates new form GUI
     */
    public ChatGUI() {
        initComponents();
    }

    public ChatGUI(PrintWriter pw) {
        this.pw = pw;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new  JScrollPane();
        msgDisplay = new  JTextArea();
        jTextField1 = new  JTextField();
        sendButton = new  JButton();
        jLabel1 = new  JLabel();

        setDefaultCloseOperation( WindowConstants.EXIT_ON_CLOSE);

        msgDisplay.setColumns(20);
        msgDisplay.setRows(5);
        msgDisplay.setEditable(false);
        jScrollPane1.setViewportView(msgDisplay);

        ActionListener actionListener = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (e.getSource() == sendButton) {
                    sendButtonActionPerformed();
                }
            }
        };

        sendButton.setText("Send");

        jLabel1.setText(getTitle());

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jScrollPane1)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jTextField1,  GroupLayout.PREFERRED_SIZE, 761,  GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap( LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(sendButton,  GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)))
                                        .addComponent(jLabel1,  GroupLayout.PREFERRED_SIZE, 851,  GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup( GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1,  GroupLayout.PREFERRED_SIZE, 48,  GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap( LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1,  GroupLayout.PREFERRED_SIZE, 422,  GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap( LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup( GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1,  GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                        .addComponent(sendButton,  GroupLayout.DEFAULT_SIZE,  GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())

        );
        sendButton.addActionListener(actionListener);

        pack();
    }// </editor-fold>

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void sendButtonActionPerformed() {
        String message = jTextField1.getText();
        send(pw, message);
//        jTextField1.setText("");
    }

    private void send(PrintWriter pw, String msg) {
        try{
            System.out.println("Message is: " + msg);
            pw.print(msg);
            System.out.println("Message written!");
        } catch (NullPointerException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public void startGUI() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for ( UIManager.LookAndFeelInfo info :  UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                     UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch ( UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private  JLabel jLabel1;
    private  JScrollPane jScrollPane1;
    private  JTextField jTextField1;
    private  JTextArea msgDisplay;
    private  JButton sendButton;
    // End of variables declaration

    public String getMessage() {
        return message;
    }

    public String getMsgDisplay() {
        return msgDisplay.getText();
    }

    public void setMsgDisplay(String prefix, String message) {
         msgDisplay.setText(msgDisplay.getText() + "\n" + prefix + ": " + message);
    }
}